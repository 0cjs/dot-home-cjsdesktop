#!/usr/bin/env bash

view_zathura() {
    #   Like XPDF, zathura displays only one document at a time. We might
    #   want to use https://tools.suckless.org/tabbed/ to change this.
    #
    #   Zathura doesn't have a -g option. It does have a `window-height`
    #   setting in zathurarc(5), but there seems to be no way to pass in
    #   commands from the command line, Ã  la vim's `-e` option. Possibly
    #   tabbed could also be used to 
    #
    #   See dot/config/zathura/zathurarc for more info and docs.
    #
    for f in "${files[@]}"; do
        zathura --fork "${options[@]}" "$f"
    done
}

view_xpdf() {
    for f in "${files[@]}"; do
        #echo \
        xpdf -z page -g $geometry "${options[@]}" "$f" &
    done
}

view_showargs() {
    echo '      $@:' "$@"
    echo '  $files:' "${files[@]}"
    echo '$options:' "${options[@]}"
}

####################################################################

viewerpreflist=(zathura okular kpdf xpdf)
for viewer in ${viewerpreflist[@]}; do
    type $viewer >/dev/null 2>&1 && break
done
case "$1" in
    -zathura|-okular|-kpdf|-xpdf|-showargs)
        viewer="${1#-}"; shift;;
esac

#   Generate $files and $options for programs where we want to start
#   a separate instance for each file. We can't do a real options parse
#   because we don't know which options are followed by an argument.
shopt -s nocasematch  # for =~ below
files=(); options=("$@")
for i in ${!options[@]}; do
   #echo "checking options[$i]=${options[$i]}"
    [[ ${options[$i]} =~ \.(PDF|DJVU)$ ]] || continue
    # It ends in `.pdf` so we guess that it's a file to display, not an option.
    files+=("${options[$i]}")
    unset options[$i]
done

# It would be nice here to check the document first to see if it's in
# PDF or landscape format, and if it has a separate ToC, so that we
# could change the dimensions of the window appropriately.
geometry=1340x1520          # Assume 4K display

view_$viewer
